package arcanemaster;

import java.awt.Color;
import java.util.LinkedHashSet;

import arcanemaster.city.City;
import arcanemaster.map.Tile;
import arcanemaster.unit.Race;
import arcanemaster.unit.Unit;

public class Player {
	
	/*
	 * below are three tile sets.  
	 * 
	 * Explored - remembers the map so far uncovered by the player.  Really only needed for reloading game
	 * 
	 * Vision includes all the tiles that the player can currently see and will be updated on any 
	 * events in this area.
	 */
	LinkedHashSet<Tile> explored = new LinkedHashSet<Tile>();  //TODO ensure player can only get updates about known information.  Might need to clone into this list
	LinkedHashSet<Tile> vision = new LinkedHashSet<Tile>();
	LinkedHashSet<Tile> territory = new LinkedHashSet<Tile>(); //TODO probably can just be generated by querying city locations
	
	LinkedHashSet<Unit> units = new LinkedHashSet<Unit>();
	LinkedHashSet<City> cities = new LinkedHashSet<City>();
	
	private static int number = 0;
	private int ID;
	
	protected String playername;
	protected Color playercolor;
	protected Race playerrace;
	
	public Player(){
		this("Player", Color.BLACK);
	}
	
	public Player(String name, Color color){
		ID = number++;
		playername = name;
		playercolor = color;
	}
	
	public void setRace(Race race){
		playerrace = race;
	}
	
	public int getID(){
		return ID;
	}
	
	public void doTurn(){
		
	}

}
